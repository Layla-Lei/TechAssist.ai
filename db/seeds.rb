# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)

# movies = [{:title => 'Aladdin', :rating => 'G', :release_date => '25-Nov-1992'},
#     	  {:title => 'The Terminator', :rating => 'R', :release_date => '26-Oct-1984'},
#     	  {:title => 'When Harry Met Sally', :rating => 'R', :release_date => '21-Jul-1989'},
#       	  {:title => 'The Help', :rating => 'PG-13', :release_date => '10-Aug-2011'},
#       	  {:title => 'Chocolat', :rating => 'PG-13', :release_date => '5-Jan-2001'},
#       	  {:title => 'Amelie', :rating => 'R', :release_date => '25-Apr-2001'},
#       	  {:title => '2001: A Space Odyssey', :rating => 'G', :release_date => '6-Apr-1968'},
#       	  {:title => 'The Incredibles', :rating => 'PG', :release_date => '5-Nov-2004'},
#       	  {:title => 'Raiders of the Lost Ark', :rating => 'PG', :release_date => '12-Jun-1981'},
#       	  {:title => 'Chicken Run', :rating => 'G', :release_date => '21-Jun-2000'},
#   	 ]

users = [
	{:name => 'Addrish Roy', :email => 'a@example.com', :password => 'password'},
	{:name => 'Tawab Safi', :email => 't@example.com', :password => 'password'},
	{:name => 'Weijia Song', :email => 'w@example.com', :password => 'password'},
	{:name => 'Yuanqing Lei', :email => 'l@example.com', :password => 'password'},
    {:name => 'Test', :email => 'test@example.com', :password => 'password'},
]

projects = [

	{:name => 'Introduction to Building a Notes App', 
	:description => '<div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h1 class="card-title">Introduction to Building a Notes App</h1><h2 class="card-title">Project Overview</h2><p class="card-text">Welcome to the tutorial series on building a Notes Application! This series is designed for learners who are new to web development or those looking to strengthen their understanding of building interactive web applications. We&apos;ll start from the basics and gradually move towards more complex features, ensuring a solid foundation at each step.</p></div></div></div></div></div><div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h2 class="card-title">Table of Content</h2><ul class="nav flex-column" style="list-style-type: decimal; padding-left: 20px;"><li class="nav-item" style="font-size: larger;"><b>Setting Up Your Project: </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Introduction to HTML, CSS, and JavaScript</li><li class="nav-item mb-1">Creating the project structure (file setup)</li><li class="nav-item mb-1">Basic HTML structure for a notes app</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Styling Your Application (CSS): </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Introduction to CSS for styling your app</li><li class="nav-item mb-1">Responsive design principles</li><li class="nav-item mb-1">Styling the notes list, form, and buttons</li></ul></li><li class="nav-item" style="font-size: larger;"><b>JavaScript Basics: </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Fundamental JavaScript concepts</li><li class="nav-item mb-1">Understanding variables, data types, functions, and control structures</li><li class="nav-item mb-1">DOM manipulation and event handling</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Adding a Note (JavaScript): </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Capturing user input from a form</li><li class="nav-item mb-1">Implementing the &apos;Add Note&apos; functionality</li><li class="nav-item mb-1">Updating the notes display dynamically</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Editing and Deleting Notes: </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Creating functions to edit and delete notes</li><li class="nav-item mb-1">Integrating these functions with the user interface</li><li class="nav-item mb-1">Event handling for edit and delete actions</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Handling Categories: </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Implementing category management</li><li class="nav-item mb-1">Adding and displaying categories</li><li class="nav-item mb-1">Associating notes with categories</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Implementing Search Functionality: </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Building a search feature to filter notes</li><li class="nav-item mb-1">Live updating of notes display based on search input</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Advanced Features and Best Practices: </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Error handling and input validation</li><li class="nav-item mb-1">Code refactoring and optimization</li><li class="nav-item mb-1">Introduction to local storage for saving notes</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Debugging and Testing: </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Techniques for debugging your web application</li><li class="nav-item mb-1">Basic principles of testing frontend code</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Conclusion and Next Steps: </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Review of key learnings</li><li class="nav-item mb-1">Suggestions for further improvements and features</li><li class="nav-item mb-1">Resources for continued learning</li></ul></li></ul></div></div></div></div></div>', 
	:abstract => 'Welcome to the tutorial series on building a Notes Application! This series is designed for learners who are new to web development or those looking to strengthen their understanding of building interactive web applications. We&apos;ll start from the basics and gradually move towards more complex features, ensuring a solid foundation at each step.', 
	:language => 'javascript', 
	:tech_area => 'frontend', 
	:tech_stack => 'HTML/CSS', 
	:skill_level => 'beginner', 
	:project_scale => 10, 
	:url => 'https://github.com/'},
	
	{:name => 'Predicting and Analyzing Energy Stock Prices', 
	:description => '<div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h1 class="card-title">Predicting and analyzing Energy Stock Prices</h1><h2 class="card-title">Project Overview</h2><p class="card-text">Predict & analyze the closing stock prices of energy sector companies based on historical data and relevant features.</p></div></div></div></div></div><div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h2 class="card-title">Table of Content</h2><ul class="nav flex-column" style="list-style-type: decimal; padding-left: 20px;"> <li class="nav-item" style="font-size: larger;"><b>Data Collection</b></li><li class="nav-item" style="font-size: larger;"><b>Data Exploration</b></li><li class="nav-item" style="font-size: larger;"><b>Data Cleaning</b></li><li class="nav-item" style="font-size: larger;"><b>Feature Engineering</b></li><li class="nav-item" style="font-size: larger;"><b>Model Building</b></li><li class="nav-item" style="font-size: larger;"><b>Model Evaluation</b></li><li class="nav-item" style="font-size: larger;"><b>Hyperparameter Tuning</b></li><li class="nav-item" style="font-size: larger;"><b>Deployment(Optional)</b></li></ul> </div></div></div></div></div><div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h2 class="card-title">Prerequisites</h2><ul class="nav flex-column" style="list-style-type: decimal; padding-left: 20px;"> <li class="nav-item" style="font-size: larger;"><b>Programming Skills: </b> <ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"> <li class="nav-item mb-1">Proficiency in Python programming is essential.</li><li class="nav-item mb-1">Familiarity with basic data manipulation using libraries like Pandas and NumPy.</li></ul> </li><li class="nav-item" style="font-size: larger;"><b>Understanding of Machine Learning: </b> <ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"> <li class="nav-item mb-1">Basic knowledge of machine learning concepts.</li><li class="nav-item mb-1">Understanding of model training, validation, and testing processes.</li></ul> </li><li class="nav-item" style="font-size: larger;"><b>Working with APIs and Web Scraping: </b> <ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"> <li class="nav-item mb-1">If collecting data from online sources, knowledge of APIs and web scraping techniques can be beneficial.</li></ul> </li><li class="nav-item" style="font-size: larger;"><b>Software and Tools: </b> <ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"> <li class="nav-item mb-1">Python installed on your machine (Python 3.6 or later recommended).</li><li class="nav-item mb-1">Installation of libraries such as scikit-learn, Pandas, and NumPy.</li></ul> </li></div></div></div></div></div>', :abstract => 'Predict & analyze the closing stock prices of energy sector companies based on historical data and relevant features.', 
	:abstract => 'Predict & analyze the closing stock prices of energy sector companies based on historical data and relevant features.',
	:language => 'python', 
	:tech_area => 'data-science', 
	:tech_stack => 'pandas', 
	:skill_level => 'beginner', 
	:project_scale => 10, 
	:url => 'https://github.com/'},

	{:name => 'A FastAPI powered IMDB web service', 
	:description => '<div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h1 class="card-title">A FastAPI powered IMDB web service</h1><h2 class="card-title">Project Overview</h2><p class="card-text">This project involves creating a simple FastAPI web application that interfaces with a MySQL database, focusing on a subset of IMDb data. FastAPI is a modern, fast web framework for building APIs with Python, and this project is an excellent opportunity to learn about creating and deploying web services, working with databases, and structuring a web application project.</p><p class="card-text">This tutorial will guide you through understanding and setting up the project, highlighting its key components and how they interact. The project is structured for educational purposes, focusing on FastAPI, database interactions, and serving static files.</p><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"> <li class="nav-item mb-1"><b> Purpose: </b> An introductory project for database concepts using FastAPI</li><li class="nav-item mb-1"><b> Key Features: </b> <ul class="nav flex-column" style="list-style-type: decimal; padding-left: 20px;"> <li class="nav-item mb-1"> FastAPI Application Setup. </li><li class="nav-item mb-1"> Serving Static Files. </li><li class="nav-item mb-1"> Simple API Endpoints. </li><li class="nav-item mb-1"> Integration with a Database (implied from the project&#39;s context). </li></ul> </li></ul> <a href="https://github.com/donald-f-ferguson/W4111_FastAPI_IMDB_Api" class="btn btn-primary" role="button">Project GitHub Repo</a></div></div></div></div></div><div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h2 class="card-title">Table of Content</h2><ul class="nav flex-column" style="list-style-type: decimal; padding-left: 20px;"><li class="nav-item" style="font-size: larger;"><b>Project Overview and Setup - In Depth Understanding: </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Goal and Scope</li><li class="nav-item mb-1">Key Technologies</li><li class="nav-item mb-1">Environment Setup</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Exploring Main Components - In Depth Understanding of <code> main.py </code> :</b> <ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">FastAPI Application Instance</li><li class="nav-item mb-1">Routing</li><li class="nav-item mb-1">Request Handling</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Data Handling - In Depth Understanding of <code>data</code> Folder: </b> <ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Data Source</li><li class="nav-item mb-1">Data Structure</li><li class="nav-item mb-1">Data Parsing</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Creating API Endpoints - In Depth Understanding of <code>service_factory.py</code> : </b> <ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Service Abstraction</li><li class="nav-item mb-1">Endpoint Functionality</li><li class="nav-item mb-1">Response Formatting</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Testing and Documentation - In Depth Understanding of <code>test_main.http</code> : </b> <ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">API Testing</li><li class="nav-item mb-1">Test Scenarios</li><li class="nav-item mb-1">Documentation Importance</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Deployment and Further Improvements - In Depth Understanding of Deployment: </b> <ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Deployment Platforms</li><li class="nav-item mb-1">Scalability and Performance</li><li class="nav-item mb-1">Continuous Development</li></ul></li></ul></div></div></div></div></div><div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h2 class="card-title">Prerequisites</h2><ul class="nav flex-column" style="list-style-type: decimal; padding-left: 20px;"><li class="nav-item" style="font-size: larger;"><b>Python Programming Skills:</b> Proficiency in Python is necessary, as FastAPI and most related tools are Python-based.</li><li class="nav-item" style="font-size: larger;"><b>Understanding of FastAPI:</b> Knowledge of FastAPI, a modern, fast (high-performance) web framework for building APIs with Python 3.7+.</li><li class="nav-item" style="font-size: larger;"><b>Database Knowledge:</b> Familiarity with database systems (like PostgreSQL, MySQL, or SQLite) and SQL, as the project likely involves database interactions.</li><li class="nav-item" style="font-size: larger;"><b>API Design and Development:</b> Understanding of RESTful API principles and experience in designing and developing APIs.</li><li class="nav-item" style="font-size: larger;"><b>Dependency Management:</b> Ability to manage Python dependencies, typically using pip and requirements.txt.</li><li class="nav-item" style="font-size: larger;"><b>Basic Web Development Knowledge:</b> Understanding of basic web technologies like HTML, CSS, and JavaScript might be useful, especially for handling the frontend or static content.</li><li class="nav-item" style="font-size: larger;"><b>Version Control Systems:</b> Knowledge of version control systems, particularly Git, for managing the project&#39;s codebase.</li><li class="nav-item" style="font-size: larger;"><b>Testing and Debugging Skills:</b> Familiarity with testing frameworks and practices for debugging Python code and APIs.</li><li class="nav-item" style="font-size: larger;"><b>Environment Setup:</b> Skills in setting up and configuring Python development environments, including virtual environments.</li><li class="nav-item" style="font-size: larger;"><b>Reading Technical Documentation:</b> Ability to understand and follow technical documentation, as you&#39;ll likely need to refer to FastAPI documentation and any project-specific instructions.</li></div></div></div></div></div>', 
	:abstract => 'This project involves creating a simple FastAPI web application that interfaces with a MySQL database, focusing on a subset of IMDb data. FastAPI is a modern, fast web framework for building APIs with Python, and this project is an excellent opportunity to learn about creating and deploying web services, working with databases, and structuring a web application project.', 
	:language => 'python', 
	:tech_area => 'backend', 
	:tech_stack => 'FASTAPI', 
	:skill_level => 'beginner', 
	:project_scale => 10, 
	:url => 'https://github.com/'},

	{:name => 'Sentiment Analysis Tool Using BERT', 
	:description => '<div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h1 class="card-title">Sentiment Analysis Tool Using BERT</h1><h2 class="card-title">Project Overview</h2><p class="card-text">Create a sentiment analysis tool that utilizes the BERT model to understand and classify sentiments in text data, such as tweets, reviews, or comments. The project will involve fine-tuning a pre-trained BERT model for the specific task of sentiment classification.</p></div></div></div></div></div><div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h2 class="card-title">Table of Content</h2><ul class="nav flex-column" style="list-style-type: decimal; padding-left: 20px;"><li class="nav-item" style="font-size: larger;"><b>Introduction to BERT and Sentiment Analysis</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Overview of BERT</li><li class="nav-item mb-1">Basics of Sentiment Analysis</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Setting Up the Environment</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Installing necessary libraries and dependencies</li><li class="nav-item mb-1">Loading the pre-trained BERT model</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Data Preparation</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Collecting and preprocessing text data</li><li class="nav-item mb-1">Understanding data labeling</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Fine-Tuning BERT for Sentiment Analysis</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Adapting BERT for classification tasks</li><li class="nav-item mb-1">Training the model with labeled data</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Evaluation and Testing</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Methods for evaluating model performance</li><li class="nav-item mb-1">Testing the model with new data</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Deployment (Optional) </b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Deploying the model for real-time analysis</li><li class="nav-item mb-1">Building a simple user interface</li></ul></li></ul></div></div></div></div></div><div class="container-fluid"><div class="row"><div class="col"><div class="card text-bg-light mb-3" style="width: 100%;"><div class="card-body"><h2 class="card-title">Prerequisites</h2><p class="card-text">To successfully undertake a sentiment analysis project using BERT, certain prerequisites need to be met. These include:</p><ul class="nav flex-column" style="list-style-type: decimal; padding-left: 20px;"><li class="nav-item" style="font-size: larger;"><b>Programming Skills:</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Proficiency in Python programming is essential.</li><li class="nav-item mb-1">Familiarity with basic data manipulation using libraries like Pandas and NumPy.</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Understanding of Machine Learning</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Basic knowledge of machine learning concepts, particularly in NLP.</li><li class="nav-item mb-1">Understanding of model training, validation, and testing processes.</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Knowledge of Neural Networks:</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Basic understanding of neural networks, especially how they are used in NLP.</li><li class="nav-item mb-1">Familiarity with concepts like embeddings, layers, and activation functions.</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Experience with TensorFlow or PyTorch:</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Practical experience with TensorFlow, as BERT is originally implemented in this framework.</li><li class="nav-item mb-1">Alternatively, knowledge of PyTorch, as there are PyTorch versions of BERT available.</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Text Preprocessing:</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Skills in text preprocessing: tokenization, stemming, lemmatization, etc.</li><li class="nav-item mb-1">Understanding of how to clean and prepare text data for model input.</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Working with APIs and Web Scraping:</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">If collecting data from online sources, knowledge of APIs and web scraping techniques can be beneficial.</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Computational Resources:</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Access to a machine with adequate computational power (preferably with a GPU) for training deep learning models.</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Software and Tools:</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Python installed on your machine (Python 3.6 or later recommended).</li><li class="nav-item mb-1">Installation of libraries such as TensorFlow, Hugging Face Transformers, Pandas, and NumPy.</li></ul></li><li class="nav-item" style="font-size: larger;"><b>Familiarity with Git and GitHub:</b><ul class="nav flex-column" style="list-style-type: disc; padding-left: 20px;"><li class="nav-item mb-1">Basic knowledge of Git for version control and GitHub for accessing repositories like the BERT GitHub repository.</li></ul></li></ul><p class="card-text">Having these prerequisites are not required and can be learned on the go. Knowing them will ensure a smoother learning curve and enable you to efficiently carry out the sentiment analysis project using BERT.</p></div></div></div></div></div>', 
	:language => 'python', 
	:tech_area => 'machine-learning', 
	:abstract => 'Create a sentiment analysis tool that utilizes the BERT model to understand and classify sentiments in text data, such as tweets, reviews, or comments. The project will involve fine-tuning a pre-trained BERT model for the specific task of sentiment classification.', 
	:tech_stack => 'BERT', 
	:skill_level => 'beginner', 
	:project_scale => 10, 
	:url => 'https://github.com/'},

]

user_projects = [
	{:user => 1, :project => 1, :process => 0},
	{:user => 1, :project => 2, :process => 100},
	{:user => 2, :project => 3, :process => 100},
	{:user => 3, :project => 1, :process => 100},
]

# movies.each do |movie|
#   Movie.create!(movie)
# end

users.each do |user|
  User.create!(user)
end

projects.each do |project|
  Project.create!(project)
end

user_projects.each do |user_project|
  user = User.find(user_project[:user])
  project = Project.find(user_project[:project])
  UserProject.create!(:user => user, :project => project, :process => user_project[:process])
end
